{"remainingRequest":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\xue-ui\\src\\viewport\\message\\message.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\xue-ui\\src\\viewport\\message\\message.vue","mtime":1540920969088},{"path":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\babel-loader\\lib\\index.js","mtime":1538758653962},{"path":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541567931783},{"path":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\vue-loader\\lib\\index.js","mtime":1538538262951}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport xIcon from '../../basic/icon/icon.vue'\nexport default {\n    name: 'xMessage',\n    components: { xIcon },\n    props: {\n        options: {\n            type: Object,\n            default: () => {\n                return {\n                    type: 'success',\n                    message: '',\n                    duration: 2000,\n                    showClose: false\n                }\n            }\n        }\n    },\n    data() { return { visible: false, timer: null } },\n    methods: {\n        closeMessage() {\n            this.close();\n        },\n        autoClose() {\n            this.timer = setTimeout(() => {\n                this.close();\n            }, this.options.duration);\n        },\n        close() {\n            this.visible = false;\n            this.$el.addEventListener('transitionend', this.destroyEle);\n        },\n        destroyEle() {\n            this.$el.removeEventListener('transitionend', this.destroyEle);\n            this.$destroy();\n        }\n    },\n    mounted() {\n        !this.options.showClose && this.autoClose();\n    },\n    beforeDestroy() {\n        this.timer ? clearTimeout(this.timer) : '';\n        this.$el.remove();\n    }\n}\n",{"version":3,"sources":["message.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"message.vue","sourceRoot":".","sourcesContent":["<template>\n    <transition name=\"slide-message\">\n        <div class=\"x-message\" :class=\"{[`${options.type}`]:true}\" v-show=\"visible\">\n            <x-icon :name=\"options.type\" class=\"x-icon\"></x-icon>\n            {{options.message}}\n            <x-icon name=\"close\" class=\"x-icon close\" v-if=\"options.showClose\" @click=\"closeMessage\" style=\"width:12px;height:12px;\"></x-icon>\n        </div>\n    </transition>\n</template>\n<script>\n    import xIcon from '../../basic/icon/icon.vue'\n    export default {\n        name: 'xMessage',\n        components: { xIcon },\n        props: {\n            options: {\n                type: Object,\n                default: () => {\n                    return {\n                        type: 'success',\n                        message: '',\n                        duration: 2000,\n                        showClose: false\n                    }\n                }\n            }\n        },\n        data() { return { visible: false, timer: null } },\n        methods: {\n            closeMessage() {\n                this.close();\n            },\n            autoClose() {\n                this.timer = setTimeout(() => {\n                    this.close();\n                }, this.options.duration);\n            },\n            close() {\n                this.visible = false;\n                this.$el.addEventListener('transitionend', this.destroyEle);\n            },\n            destroyEle() {\n                this.$el.removeEventListener('transitionend', this.destroyEle);\n                this.$destroy();\n            }\n        },\n        mounted() {\n            !this.options.showClose && this.autoClose();\n        },\n        beforeDestroy() {\n            this.timer ? clearTimeout(this.timer) : '';\n            this.$el.remove();\n        }\n    }\n</script>\n<style scoped lang=\"scss\">\n    @import '../../basic/color.scss';\n    .x-message {\n        position: fixed;\n        z-index: 100;\n        top: 50px;\n        left: 50%;\n        transform: translateX(-50%);\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        font-size: 16px;\n        background: #fff;\n        padding: .5em 1.2em;\n        border-radius: 4px;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n        >.x-icon {\n            margin-right: .4em;\n            width: 25px;\n            height: 25px;\n            &.close {\n                cursor: pointer;\n                margin-left: 3em;\n                margin-right: -.8em;\n                color: $sub;\n                &:hover {\n                    color: $hover;\n                }\n            }\n        }\n        &.success {\n            color: $success;\n        }\n        &.error {\n            color: $error;\n        }\n        &.info {\n            color:$link;\n        }\n        &.warning {\n            color: $warning;\n        }\n    }\n    @keyframes slide-down {\n        from {\n            transform: translateY(-100%) translateX(-50%);\n            opacity: 0;\n        }\n        to {\n            transform: translateY(0) translateX(-50%);\n            opacity: 1;\n        }\n    }\n    .slide-message-enter-active,\n    .slide-message-leave-active {\n        transition: transform .3s ease-in-out, opacity .3s ease-in-out;\n    }\n    .slide-message-enter-to,\n    .slide-message-leave {\n        transform: translateY(0) translateX(-50%);\n        opacity: 1;\n    }\n    .slide-message-enter,\n    .slide-message-leave-to {\n        transform: translateY(-100%) translateX(-50%);\n        opacity: 0;\n    }\n</style>"]}]}